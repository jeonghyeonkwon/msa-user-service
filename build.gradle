buildscript {
    ext{
        queryDslVersion="5.0.0"
    }
}
plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version"1.0.10"
    id 'java'
}

group = 'com.jeonghyeon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.kafka', name: 'spring-kafka'
    implementation group: 'mysql', name: 'mysql-connector-java'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly(group: 'com.h2database', name: 'h2', version: '1.3.176')

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl{
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets{
    main.java.srcDir querydslDir
}
configurations{

    querydsl.extendsFrom compileClasspath
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
